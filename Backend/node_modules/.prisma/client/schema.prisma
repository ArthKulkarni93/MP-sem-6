// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model UniversityTable {
  id       Int            @id @default(autoincrement())
  name     String
  address  String
  branches BranchTable[]
  students StudentTable[]
  teachers TeacherTable[]
}

model BranchTable {
  id            Int             @id @default(autoincrement())
  Branchcode    String
  Branchname    String
  universityId  Int
  university_Id UniversityTable @relation(fields: [universityId], references: [id])
  students      StudentTable[]
  teachers      TeacherTable[]
  tests         TestTable[]
}

model YearTable {
  id       Int            @id @default(autoincrement())
  name     String
  year     Int
  students StudentTable[]
  tests    TestTable[]
}

model StudentTable {
  id            Int             @id @default(autoincrement())
  firstname     String
  lastname      String
  email         String
  password      String
  PRN           String
  branchId      Int
  universityId  Int
  yearId        Int
  branch_Id     BranchTable     @relation(fields: [branchId], references: [id])
  university_Id UniversityTable @relation(fields: [universityId], references: [id])
  year_Id       YearTable       @relation(fields: [yearId], references: [id])
}

model TeacherTable {
  id            Int             @id @default(autoincrement())
  firstname     String
  lastname      String
  email         String
  password      String
  branchId      Int
  universityId  Int
  branch_Id     BranchTable     @relation(fields: [branchId], references: [id])
  university_Id UniversityTable @relation(fields: [universityId], references: [id])
  tests         TestTable[]
}

model TestTable {
  id            Int              @id @default(autoincrement())
  title         String
  teacherID     Int
  branchId      Int
  subject       String
  yearId        Int
  noofquestions Int
  noofstudents  Int
  scheduledDate DateTime
  teacher_Id    TeacherTable     @relation(fields: [teacherID], references: [id])
  branch_Id     BranchTable      @relation(fields: [branchId], references: [id])
  year_Id       YearTable        @relation(fields: [yearId], references: [id])
  questions     QuestionsTable[]
}

model QuestionsTable {
  id            Int       @id @default(autoincrement())
  question      String
  optionA       String
  optionB       String
  optionC       String
  optionD       String
  correctOption String
  marks         Int
  testId        Int
  test_Id       TestTable @relation(fields: [testId], references: [id])
}

model ResultTable {
  id          Int @id @default(autoincrement())
  totalmarks  Int
  scoredmarks Int
  testId      Int
  studentId   Int
}
